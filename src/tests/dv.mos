module DistanceVector {
  //input:link;
  //output:bestPath;
  table< <Src:String, Dest:String, Cost:int>, keys<Src,Dest> > link;
  view<SrcNode:String, DestNode:String, Cost:int, NextHop:String> path;
  view<Src:String, Dest:String, Cost:int, NextHop:String > bestPath;
  path(X,Y,C,Y) :- link(X,Y,C);
  path( X,Y,C1+C2, Z ) :- link(X,Z,C1), bestPath(Z,Y,C2,_), X!=Y;
  bestPath(X, Y, min<C>, N) :- path(X, Y, C, N), groupBy(X,Y);
}

link("A","B",1);
link("B","C",1);
link("B","D",1);

on periodic(1,1,0), !bestPath("A","D", 2, "B") => print("assertion 1 failed");
on periodic(1,1,1) => insert link("D","C",1);
on periodic(1,1,2), !bestPath("A","C", 2, "B") => print("assertion 2 failed");
on periodic(1, 1, 3) => delete link("B","C",1);
on periodic(1,1,4), !bestPath("A","C", 3, "B") => print("assertion 3 failed");
on periodic(1,1,4) => print("all tests in dv finished.");
on periodic(1,1,5) => exit(0);
//print("path", X,Y,C,P) :- path(X,Y,C,P);
//print("bestpath", X,Y,C,P) :- bestPath(X,Y,C,P);
